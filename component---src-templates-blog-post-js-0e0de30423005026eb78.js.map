{"version":3,"file":"component---src-templates-blog-post-js-0e0de30423005026eb78.js","mappings":"iKAqDA,IA1CY,WAAO,IAAD,IACVA,GAAOC,EAAAA,EAAAA,gBAAe,cAiBtBC,EAAM,UAAGF,EAAKG,KAAKC,oBAAb,aAAG,EAAwBF,OAC3B,UAAGF,EAAKG,KAAKC,oBAAb,OAAG,EAAwBC,OAEvC,OACE,uBAAKC,UAAU,OACb,gBAAC,EAAAC,EAAD,CACED,UAAU,aACVE,OAAO,QACPC,QAAS,CAAC,OAAQ,OAAQ,QAC1BC,IAAI,4BACJC,MAAO,GACPC,OAAQ,GACRC,QAAS,GACTC,IAAI,kBARN,uBAUCZ,MAAAA,OAAA,EAAAA,EAAQa,OACP,uCACa,8BAASb,EAAOa,MAD7B,OACqDb,MAAAA,OAAA,EAAAA,EAAQc,UAAW,S,kFCmBhF,UA1DyB,SAAC,GAAwB,IAAD,EAArBhB,EAAqB,EAArBA,KAAMiB,EAAe,EAAfA,SAC1BC,EAAOlB,EAAKmB,eACZC,GAAY,UAAApB,EAAKG,KAAKC,oBAAV,eAAwBiB,QAAxB,QACVC,EAAmBtB,EAAnBsB,SAAUC,EAASvB,EAATuB,KAEZC,EAAcN,EAAKM,YAErBC,EAAWD,EAAYE,KAK3B,OAJIF,EAAYG,SAAWH,EAAYG,UAAYH,EAAYE,OAC7DD,GAAQ,YAAgBD,EAAYG,SAIpC,gBAAC,IAAD,CAAQV,SAAUA,EAAUI,MAAOD,GACjC,gBAAC,IAAD,CACEC,MAAOG,EAAYH,MACnBO,YAAaJ,EAAYI,aAAeV,EAAKW,UAE/C,2BACEvB,UAAU,YACVwB,WAAS,EACTC,SAAS,6BAET,8BACE,sBAAIC,SAAS,YAAYR,EAAYH,OACrC,yBAAII,IAEN,2BACEQ,wBAAyB,CAAEC,OAAQhB,EAAKiB,MACxCH,SAAS,gBAEX,2BACA,8BACE,gBAAC,IAAD,QAGJ,uBAAK1B,UAAU,iBACb,0BACE,0BACGgB,GACC,gBAAC,EAAAc,KAAD,CAAMC,GAAIf,EAASgB,OAAOC,KAAMC,IAAI,QAApC,KACKlB,EAASE,YAAYH,QAI9B,0BACGE,GACC,gBAAC,EAAAa,KAAD,CAAMC,GAAId,EAAKe,OAAOC,KAAMC,IAAI,QAC7BjB,EAAKC,YAAYH,MADpB,Y","sources":["webpack://gatsby-starter-blog/./src/components/bio.js","webpack://gatsby-starter-blog/./src/templates/blog-post.js"],"sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n  const social = data.site.siteMetadata?.social\n\n  return (\n    <div className=\"bio\">\n      <StaticImage\n        className=\"bio-avatar\"\n        layout=\"fixed\"\n        formats={[\"auto\", \"webp\", \"avif\"]}\n        src=\"../images/profile-pic.jpg\"\n        width={50}\n        height={50}\n        quality={95}\n        alt=\"Profile picture\"\n      />\n      {author?.name && (\n        <p>\n          Written by <strong>{author.name}</strong> &mdash; {author?.summary || null}\n        </p>\n      )}\n    </div>\n  )\n}\n\nexport default Bio\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst BlogPostTemplate = ({ data, location }) => {\n  const post = data.markdownRemark\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const { previous, next } = data\n\n  const frontmatter = post.frontmatter\n\n  let dateText = frontmatter.date\n  if (frontmatter.updated && frontmatter.updated !== frontmatter.date) {\n    dateText += ` updated ${frontmatter.updated}`\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo\n        title={frontmatter.title}\n        description={frontmatter.description || post.excerpt}\n      />\n      <article\n        className=\"blog-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          <h1 itemProp=\"headline\">{frontmatter.title}</h1>\n          <p>{dateText}</p>\n        </header>\n        <section\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          itemProp=\"articleBody\"\n        />\n        <hr />\n        <footer>\n          <Bio />\n        </footer>\n      </article>\n      <nav className=\"blog-post-nav\">\n        <ul>\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        updated(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n"],"names":["data","useStaticQuery","author","site","siteMetadata","social","className","S","layout","formats","src","width","height","quality","alt","name","summary","location","post","markdownRemark","siteTitle","title","previous","next","frontmatter","dateText","date","updated","description","excerpt","itemScope","itemType","itemProp","dangerouslySetInnerHTML","__html","html","Link","to","fields","slug","rel"],"sourceRoot":""}